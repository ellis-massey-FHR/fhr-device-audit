name: "Generate FHR Device Audit Report"

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 13 * * 1-5"  # weekdays 06:00 PT

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Ensure these are present even if requirements.txt misses any
          pip install requests python-dotenv pandas numpy openpyxl matplotlib pillow

      - name: "Create ServiceNow env file"
        env:
          SERVICENOW_INSTANCE: ${{ secrets.SERVICENOW_INSTANCE }}
          SERVICENOW_USER: ${{ secrets.SERVICENOW_USER }}
          SERVICENOW_PASS: ${{ secrets.SERVICENOW_PASS }}
        run: |
          mkdir -p scripts
          {
            echo "SERVICENOW_INSTANCE=${SERVICENOW_INSTANCE}"
            echo "SERVICENOW_USER=${SERVICENOW_USER}"
            echo "SERVICENOW_PASS=${SERVICENOW_PASS}"
          } > scripts/servicenow.env

      - name: "Run report (headless matplotlib)"
        env:
          MPLBACKEND: Agg
          PYTHONIOENCODING: utf-8
        run: |
          python -X utf8 scripts/get_servicenow_data.py

      - name: "Debug: list any Excel files"
        run: |
          echo "PWD: $(pwd)"
          echo "Top-level:"
          ls -la
          echo "Searching for Excel files (up to depth 6):"
          find . -maxdepth 6 -type f -name "*.xlsx" -print || true

      - name: "Collect Excel into ./output"
        run: |
          mkdir -p output
          FILE="$(find . -maxdepth 6 -type f -name 'fhr_computer_requests.xlsx' -print -quit)"
          if [ -z "$FILE" ]; then
            echo "Did not find fhr_computer_requests.xlsx anywhere under $(pwd)."
            exit 1
          fi
          echo "Found: $FILE"
          cp -f "$FILE" output/
          ls -lah output

      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: fhr-computer-requests
          path: output/fhr_computer_requests.xlsx
          if-no-files-found: error

      - name: "Commit results to repo (optional)"
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add output/fhr_computer_requests.xlsx
          git commit -m "chore: update report [skip ci]" || echo "No changes to commit"
          git push
