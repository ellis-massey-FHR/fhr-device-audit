name: Generate FHR Device Audit Report

on:
  workflow_dispatch: {}
  schedule:
    # Weekdays 13:00 UTC (adjust to taste)
    - cron: "0 13 * * 1-5"

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Ensure these are present even if requirements.txt is missing them
          pip install requests python-dotenv pandas numpy openpyxl matplotlib pillow

      - name: Create env file for ServiceNow
        env:
          SERVICENOW_INSTANCE: ${{ secrets.SERVICENOW_INSTANCE }}
          SERVICENOW_USER: ${{ secrets.SERVICENOW_USER }}
          SERVICENOW_PASS: ${{ secrets.SERVICENOW_PASS }}
        run: |
          mkdir -p scripts
          {
            echo "SERVICENOW_INSTANCE=${SERVICENOW_INSTANCE}"
            echo "SERVICENOW_USER=${SERVICENOW_USER}"
            echo "SERVICENOW_PASS=${SERVICENOW_PASS}"
          } > scripts/servicenow.env

      # Your Python writes to a Windows-looking path; pre-create it on Linux
      - name: Pre-create hardcoded output dir
        run: |
          mkdir -p "C:\Users\ellism3\kochind.com\FHR Endpoint Services - FHR Computer Refresh List Last 60 Days"

      - name: Run report (headless matplotlib)
        env:
          MPLBACKEND: Agg
          PYTHONIOENCODING: utf-8
        run: |
          python -X utf8 scripts/get_servicenow_data.py

      - name: Collect Excel into ./output for artifact/commit
        run: |
          mkdir -p output
          # NOTE: your script creates 'fhr_computer_requests.xlsx' (plural)
          cp -f "C:\Users\ellism3\kochind.com\FHR Endpoint Services - FHR Computer Refresh List Last 60 Days/fhr_computer_requests.xlsx" output/
          echo "Listing output:"
          ls -lah output

      # A) Downloadable artifact
      - uses: actions/upload-artifact@v4
        with:
          name: fhr-computer-requests
          path: output/fhr_computer_requests.xlsx
          if-no-files-found: error

      # B) Commit latest file back to repo (keep a single static filename)
      - name: Commit results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add output/fhr_computer_requests.xlsx
          git commit -m "chore: update report [skip ci]" || echo "No changes to commit"
          git push
